########################################################################################################################
########################################################################################################################
########################################################################################################################
#         DELETE ME
#
# This is the README configuration for the Example module itself.
# Delete this (up to and including the line with `---`) and fill in
# the template below the dashes

# Name of this project
name: terraform-module-template

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
- name: "Cloudopsy, LTD"
  url: "https://cloudopsy.com"
  year: "2022"

# Canonical GitHub repo
github_repo: cloudopsy/terraform-module-template

description: |-
  This repository serves as a template for creating high-quality Terraform modules for AWS resources.

  It follows the standard module structure recommended by HashiCorp and includes all the necessary requirements for publishing a module.
  In addition, this module includes features such as version pinning and automated testing to ensure the reliability and quality of the code.

  Please note that this module is intended to be used as a starting point for creating new repositories and is not a useful module by itself.

quickstart: |-
  1. Create a new repository and check out the branch you want to work on.
  2. Replace the Terraform code at the root of the repository with the code you want to publish.
  3. Update the code in the examples/complete directory to include Terraform code that will make a good automated test. Please keep the context.tf and fixtures.us-east-2.tfvars files in place and only change the name, leaving the region, namespace, environment, and stage as is.
  4. Update the test/src/examples_complete_test.go file to verify the outputs of running terraform apply on the examples/complete directory.
  5. Run make github/init to update the repository with the current Cloud Posse framework files (e.g. CODEOWNERS).
  6. Run make pr/auto-format to format the Terraform code and generate documentation.
  7. Commit all changes to git and open a pull request on the new repository.

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/cloudopsy/terraform-module-template/) - complete example of using this module


references:
- name: "Cloudopsy Documentation"
  url: "https://docs.cloudopsy.com"
  description: "The Cloudopsy Developer Hub (documentation)"
- name: "Terraform Standard Module Structure"
  description: "HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories."
  url: "https://www.terraform.io/docs/language/modules/develop/structure.html"
- name: "Terraform Module Requirements"
  description: "HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy."
  url: "https://www.terraform.io/docs/registry/modules/publish.html#requirements"
- name: "Terraform Version Pinning"
  description: "The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration"
  url: "https://www.terraform.io/docs/language/settings/index.html#specifying-a-required-terraform-version"

related:
- name: "Example App"
  url: "https://github.com/cloudopsy/example-app"
  description: "Example application for CI/CD demonstrations of Github Actions"


---
#         DELETE ME
#
# The above is the README configuration for the Example module itself.
# Delete from here to the top of file and fill in the template below
########################################################################################################################
########################################################################################################################
########################################################################################################################


#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name:

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloudopsy, LTD"
    url: "https://cloudopsy.com"
    year: "2022"

# Canonical GitHub repo
github_repo: cloudopsy/terraform-module-template

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-example-module.svg"
    url: "https://github.com/cloudposse/terraform-example-module/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"
  - name: "Discourse Forum"
    image: "https://img.shields.io/discourse/https/ask.sweetops.com/posts.svg"
    url: "https://ask.sweetops.com/"

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:

# Short description of this project
description: |-
  Short
  description

# Introduction to the project
introduction: |-
  This is an introduction.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [test](test).

  ```hcl
  # Create a standard label resource. See [null-label](https://github.com/cloudposse/terraform-null-label/#terraform-null-label--)
  module "label" {
    source  = "cloudposse/label/null"
    # Cloud Posse recommends pinning every module to a specific version, though usually you want to use the current one
    # version = "x.x.x"

    namespace = "eg"
    name      = "example"
  }

  module "example" {
    source  = "cloudposse/*****/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    example = "Hello world!"

    context = module.label.this
  }
  ```

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/cloudposse/terraform-example-module/) - complete example of using this module

# How to get started quickly
quickstart: |-
  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Piotr Wreczycki"
    github: "netf"