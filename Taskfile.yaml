version: '3'
vars:
  BUILD_HARNESS_URL: https://github.com/cloudopsy/build-harness.git
  BUILD_HARNESS_PATH: "{{.ROOT_DIR}}/.build-harness"
includes:
  build-harness:
    taskfile: .build-harness/Taskfile.yaml
    optional: true
  test:
    taskfile: test/Taskfile.yaml
    optional: true
tasks:
  help:
    cmds:
      - |
        cat {{.BUILD_HARNESS_PATH}}/logo.txt | sed s/"Build Harness"/"Terraform Module: ${PWD##*/}"/g
      - task -l
    silent: true
    desc: "Help"
  default:
    deps:
      - build-harness
    silent: true
    cmds:
      - task: help
  build-harness:
    summary: |
      # Downloads build harness
    cmds:
      - |
        if [ ! -d {{.BUILD_HARNESS_PATH}} ]; then
          git clone {{.BUILD_HARNESS_URL}} {{.BUILD_HARNESS_PATH}}
        fi
    silent: true

  test:
    desc: "Test terraform code"
    summary: |
      # Test terraform code

    deps:
      - build-harness
    silent: true
    dir: "test"
    cmds:
      - task build-harness:utils:print_info MESSAGE="Testing terraform module"
      - go mod download
      - go test -v -timeout 60m

  readme:
    desc: "Generate README.md"
    summary: |
      # Generate documentation

      - README.md
      - docs/*
    deps:
      - build-harness
    silent: true
    cmds:
      - task build-harness:utils:print_info MESSAGE="Generating documentation"
      - task build-harness:readme:build

  lint:
    desc: "Lint terraform code"
    summary: |
      # Lint terraform code

      - terraform:lint
      - terraform:fmt
      - terraform:validate
      - terraform:tfsec:scan
    deps:
      - build-harness
    silent: true
    cmds:
      - task build-harness:utils:print_info MESSAGE="Initializing terraform"
      - task build-harness:terraform:init
      - task build-harness:utils:print_info MESSAGE="Linting terraform configuration"
      - task build-harness:terraform:lint